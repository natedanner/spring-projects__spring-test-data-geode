import io.spring.gradle.convention.Utils

buildscript {
	dependencies {
		classpath('io.spring.gradle:spring-build-conventions:0.0.38') {
			exclude group: "io.spring.gradle", module: "docbook-reference-plugin"
		}
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
	}
	repositories {
		mavenCentral()
		gradlePluginPortal()
		maven { url 'https://repo.spring.io/plugins-release' }
		maven {
			url 'https://repo.spring.io/plugins-snapshot'
			if (project.hasProperty('artifactoryUsername')) {
				credentials {
					username "$artifactoryUsername"
					password "$artifactoryPassword"
				}
			}
		}
	}
}

apply plugin: 'io.spring.convention.root'

allprojects {

	group = 'org.springframework.data'

	repositories {

		mavenCentral()

		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}

	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, "minutes"
	}
}

description = 'Spring Test Framework for Apache Geode'

// Define project dependency version overrides
//ext['spring.version'] = "$springVersion"
ext['spring-framework.version'] = "$springVersion"
ext['spring-data-bom.version'] = "$springDataBomVersion"

// Define Gradle build release type (e.g. snapshot, milestone, release candidate or GA release)
ext.milestoneBuild = Utils.isMilestone(project)
ext.releaseBuild = Utils.isRelease(project)
ext.snapshotBuild = Utils.isSnapshot(project)

// Define Gradle buildscript plugin to modify the generated Maven POM.
ext.MAVEN_POM_EDITOR_GRADLE = "$rootDir/gradle/maven-pom-editor.gradle"

nohttp {
	source.exclude "**/target/**"
}
